<!DOCTYPE html>
<html>

  <head>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
    crossorigin=""/> 

    <meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=1.0' />
    <title>Torn Tracks Field Guide</title>
    <%= stylesheet_link_tag('application', :media => 'all') %>
    <%= javascript_include_tag('application') %>
    
  <script type="application/geo+json" id="geo-data">
  {
    "type": "FeatureCollection",
    "features": [
    <% @tracks.each do |track| %>
      <% if track.sound.exists? %>
      {"type": "Feature",
      "properties": {
        "title": "<%= track.name %><%= track.track_number %>: <%= track.track_version %>",
        "audio_url": "<%= track.sound %>",
        "marker-symbol": "commercial",
        "marker-size": "large",
        "marker-color": "c4ba6a"
      },
      "geometry": {
        "type": "Point",
        "coordinates": [<%= track.longitude %>, <%= track.latitude %>]
      }},
      <% end %>
    <% end %>
    {}
    ]
  }
  </script>

  <script type="text/html" id="popup-template">
    <div class="audio-popup">
        <h5>{{= title }}</h5>
        &nbsp;
        <audio src="{{= audio_url }}" controls ></audio>
    </div>
  </script>

  </head>

  <body>

      <div class="namespage mainnames">
        <div class="menu">
          <button class="button"><%= link_to("<<", public_index_path) %></button>
          <button id="button">i</button>

        <div id="myModal" class="modal">
          <div class="modal-content">
            <span class="close">&times;</span>
            <p>&nbsp;</p>
            <p>This is the <i>Field Guide</i> to Torn Tracks.</p>
            <p>The page functions similar to a page in a bird guide, showing
              a specific species and its characteristics.</p>
            <p>Here, all the different versions that exist of a specific tracks
              are collected together and shown on one page. Next to this, their
              average pitch and length are shown, plus an overview of the habitat(s)
              that are connected to these tracks.</p>
            <p>&nbsp;</p>
          </div>
        </div>
      </div>
    <div class="wrappernames">
      <div id="clearnote"></div>

      <div id="notebook">
        <%= yield %>
      </div>
    </div>

    </div>

      <div class="footer">
        <p id="copyright">&copy; Jiska Huizing <%= Date.today.year %></p>
      </div>

  </body>

  <script src="https://cdn.jsdelivr.net/lodash/4.16.2/lodash.min.js"></script>
  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
  integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
  crossorigin="">
  </script>

  <script>
  _.templateSettings = {
    interpolate: /\{\{\=(.+?)\}\}/g,
    evaluate: /\{\{(.+?)\}\}/g
  };

  var mapOptions = {
    zoomControl: false
 }

  var map = L.map('OSMmap', mapOptions).setView([53.073, 6.858], 9);

  var popup_template = _.template(window.document.querySelector('#popup-template').innerText);
  var geo_data = JSON.parse(window.document.querySelector('#geo-data').innerText);
 
  L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>'  
  }).addTo(map);

var layer = new L.TileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png');
map.addLayer(layer);

var zoomOptions = {
  position: 'topright',
};
var zoom = L.control.zoom(zoomOptions);
zoom.addTo(map);

  var Icon = L.icon({
    iconUrl: '<%= image_path('finger_locations.png') %>',,
    iconSize:     [40, 40],
    iconAnchor:   [20, 40], 
    popupAnchor:  [0, -40] 
  });

  var addedGeoJSON = L.geoJson(geo_data, {
    onEachFeature: function (feature, layer) {
        if (feature.properties && feature.properties.audio_url) {
            layer.bindPopup(popup_template(feature.properties));
        }
        else if (feature.properties && feature.properties.popupContent) {
            layer.bindPopup(feature.properties.popupContent);
        }
    },
    pointToLayer: function (feature, latlng) {
        return L.marker(latlng, {icon: Icon}, {autoPanOnFocus: true});
    }
  }).addTo(map);

  map.fitBounds(addedGeoJSON.getBounds(), {
    padding: [20,20]
  });
</script>

<script>
    // Get the modal
    var modal = document.getElementById('myModal');
    // Get the button that opens the modal
    var btn = document.getElementById("button");
    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];
    // When the user clicks on the button, open the modal
    btn.onclick = function() {modal.style.display = "block";}
    // When the user clicks on <span> (x), close the modal
    span.onclick = function() { modal.style.display = "none"; }
    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function(event) {
      if (event.target == modal) {
          modal.style.display = "none";
        }
      }
  </script>

</html>
